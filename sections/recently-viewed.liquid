{%- liquid
  assign section_title = section.settings.section_title
  assign max_products = section.settings.max_products
  assign link_text = section.settings.link_text
  assign link_url = section.settings.link_url
  assign bg_color = section.settings.background_color
  assign page_padding = section.settings.page_padding | default: 80 | append: 'px'
  assign page_padding_top = section.settings.page_padding_top | default: 50 | append: 'px'
  assign page_padding_bottom = section.settings.page_padding_bottom | default: 50 | append: 'px'

  assign products_per_row_mobile = section.settings.products_per_row_mobile
  assign mobile_grid_item_width = 100 | divided_by: products_per_row_mobile
-%}

<style>
  #RecentlyViewed-{{ section.id }} { --products-per-row-mobile: {{ products_per_row_mobile }}; --mobile-grid-item-width: {{ mobile_grid_item_width }}%; --page-padding: {{ page_padding }}; }
  #RecentlyViewed-{{ section.id }} .recently-viewed { padding-top: {{ page_padding_top }}; padding-bottom: {{ page_padding_bottom }}; }
  #RecentlyViewed-{{ section.id }} .page-width { padding: 0 var(--page-padding); }
  .recently-viewed__header { display: flex; align-items: center; justify-content: space-between; margin-bottom: 24px; }
  .recently-viewed__title { font-family: 'ButlerPro'; font-weight: 500; font-size: 32px; line-height: 100%; margin: 0; color: #000; }
  .recently-viewed__link { text-decoration: none; display: flex; align-items: center; gap: 12px; font-weight: 700; font-size: 18px; letter-spacing: 0.015em; color: #000; }
  .recently-viewed__link svg { width: 24px; height: 14px; margin-bottom: 5px; transition: transform 0.3s ease; }
  .recently-viewed__link:hover svg { transform: translateX(5px); }
  .recently-viewed__slider-wrapper { position: relative; margin-left: {{ page_padding }}; }
  .recently-viewed__grid { display: grid; grid-auto-flow: column; grid-auto-columns: 250px; list-style-type: none; gap: 16px; overflow-x: auto; scroll-behavior: smooth; -ms-overflow-style: none; scrollbar-width: none; padding-bottom: 20px; padding-left: 0; padding-right: var(--page-padding); margin: 0; }
  .recently-viewed__grid::-webkit-scrollbar { display: none; }
  .recently-viewed__slider-arrow { position: absolute; top: 30%; width: 42px; height: 42px; border-radius: 100%; background-color: #FAFAF8; opacity: 0.9; border: 1px solid rgba(0,0,0,0.05); cursor: pointer; z-index: 2; box-shadow: 8px 8px 30px rgba(0, 0, 0, 0.1); display: flex; align-items: center; justify-content: center; transition: all 0.3s ease; filter: drop-shadow(8px 8px 30px rgba(0, 0, 0, 0.2)); }
  .recently-viewed__slider-arrow:hover { opacity: 1; background-color: #e8e6e6; transform: scale(1.15); }
  .recently-viewed__slider-arrow--prev { left: calc(var(--page-padding) - 21px); }
  .recently-viewed__slider-arrow--next { right: var(--page-padding); }
  .recently-viewed__slider-arrow svg { width: 15.42px; height: 12px; color: #483E3F; }
  .recently-viewed__slider-arrow.is-hidden { display: none; }
  .recently-viewed__grid .product-card-wrapper { width: 100%; }
  @media (max-width: 768px) {
    #RecentlyViewed-{{ section.id }} .page-width { padding: 0 15px; }
    .recently-viewed__header { flex-direction: column; align-items: flex-start; margin-bottom: 20px; gap: 4px; }
    .recently-viewed__title { font-size: 22px; }
    .recently-viewed__link { font-size: 14px; text-decoration: underline; text-underline-offset: 3px; }
    .recently-viewed__link svg { display: none; }
    .recently-viewed__slider-wrapper { margin: 0; padding-left: 15px; }
    .recently-viewed__grid { grid-auto-columns: calc(var(--mobile-grid-item-width) - 15px + (15px / var(--products-per-row-mobile))); scroll-snap-type: x mandatory; gap: 15px; padding-left: 15px; padding-right: 15px; }
    .recently-viewed__grid > li { scroll-snap-align: start; }
    .recently-viewed__slider-arrow { display: none; }
  }
</style>

<recently-viewed-slider
  id="RecentlyViewed-{{ section.id }}"
  data-max-products="{{ max_products }}"
  data-search-url="{{ routes.search_url }}"
  data-show-variants="{{ section.settings.show_variant_picker }}"
>
  <div class="recently-viewed" style="background-color: {{ bg_color }}; display: none;">
    <div class="page-width">
      {%- if section_title != blank or link_text != blank -%}
        <div class="recently-viewed__header">
          {%- if section_title != blank -%} <h2 class="recently-viewed__title">{{ section_title | escape }}</h2> {%- endif -%}
          {%- if link_text != blank and link_url != blank -%}
            <a href="{{ link_url }}" class="recently-viewed__link"><span>{{ link_text | escape }}</span><svg width="24" height="14" viewBox="0 0 24 14" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M20.056 8.02073C20.0738 8.00261 20.07 7.99354 20.0447 7.99354C8.8638 7.99385 12.1814 7.99385 0.99707 7.99354C0.598165 7.99354 0.218007 7.75026 0.0741014 7.37948C-0.13918 6.82823 0.120508 6.22495 0.691445 6.04448C0.795507 6.01167 1.08285 5.99526 1.08285 5.99526C1.08285 5.99526 8.79677 5.99714 20.0358 5.99714C20.0677 5.99714 20.0724 5.98604 20.0499 5.96386C18.6324 4.54729 17.229 3.14323 15.8396 1.75167C15.7127 1.62479 15.6272 1.51026 15.5832 1.40807C15.2086 0.539949 16.0683 -0.278957 16.9266 0.0913558C17.0297 0.136043 17.1943 0.271981 17.4202 0.499169C19.2933 2.38292 21.1603 4.2512 23.0213 6.10401C23.2147 6.2962 23.3358 6.44089 23.3846 6.53807C23.5721 6.91167 23.5135 7.38651 23.2139 7.68604C21.2411 9.65979 19.2474 11.6548 17.2327 13.671C16.7968 14.107 16.1119 14.1112 15.7168 13.6204C15.4008 13.2271 15.4257 12.6524 15.7805 12.2967C17.2061 10.8692 18.6313 9.44386 20.056 8.02073Z" fill="#180405"/></svg></a>
          {%- endif -%}
        </div>
      {%- endif -%}
    </div>
    <div class="recently-viewed__slider-wrapper">
      <ul class="recently-viewed__grid js-slider" role="list"></ul>
      <button class="recently-viewed__slider-arrow recently-viewed__slider-arrow--prev js-slider-prev is-hidden" aria-label="Previous"><svg transform="scale(-1 1)" width="16" height="12" viewBox="0 0 16 12" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12.4958 6.87812C12.511 6.86258 12.5078 6.85481 12.4863 6.85481C2.96734 6.85507 10.3707 6.85507 0.848845 6.85481C0.509235 6.85481 0.185587 6.64618 0.0630715 6.32822C-0.118506 5.8555 0.10258 5.33816 0.58865 5.1834C0.677243 5.15526 0.921875 5.1412 0.921875 5.1412C0.921875 5.1412 2.91028 5.1428 12.4787 5.1428C12.5058 5.1428 12.5098 5.13329 12.4907 5.11426C11.2839 3.8995 10.089 2.69546 8.9062 1.50213C8.79818 1.39333 8.72542 1.29511 8.6879 1.20748C8.36905 0.46303 9.10094 -0.239217 9.83165 0.0783415C9.91944 0.116663 10.0595 0.233236 10.2519 0.428059C11.8466 2.04346 13.436 3.64559 15.0204 5.23445C15.185 5.39926 15.2881 5.52334 15.3296 5.60668C15.4893 5.92705 15.4394 6.33425 15.1844 6.59111C13.5048 8.28369 11.8075 9.99448 10.0922 11.7235C9.7211 12.0973 9.13806 12.101 8.80164 11.6801C8.53267 11.3428 8.55382 10.85 8.85591 10.5449C10.0696 9.32078 11.2829 8.09851 12.4958 6.87812Z" fill="currentColor"/></svg></button>
      <button class="recently-viewed__slider-arrow recently-viewed__slider-arrow--next js-slider-next" aria-label="Next"><svg width="16" height="12" viewBox="0 0 16 12" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12.4958 6.87812C12.511 6.86258 12.5078 6.85481 12.4863 6.85481C2.96734 6.85507 10.3707 6.85507 0.848845 6.85481C0.509235 6.85481 0.185587 6.64618 0.0630715 6.32822C-0.118506 5.8555 0.10258 5.33816 0.58865 5.1834C0.677243 5.15526 0.921875 5.1412 0.921875 5.1412C0.921875 5.1412 2.91028 5.1428 12.4787 5.1428C12.5058 5.1428 12.5098 5.13329 12.4907 5.11426C11.2839 3.8995 10.089 2.69546 8.9062 1.50213C8.79818 1.39333 8.72542 1.29511 8.6879 1.20748C8.36905 0.46303 9.10094 -0.239217 9.83165 0.0783415C9.91944 0.116663 10.0595 0.233236 10.2519 0.428059C11.8466 2.04346 13.436 3.64559 15.0204 5.23445C15.185 5.39926 15.2881 5.52334 15.3296 5.60668C15.4893 5.92705 15.4394 6.33425 15.1844 6.59111C13.5048 8.28369 11.8075 9.99448 10.0922 11.7235C9.7211 12.0973 9.13806 12.101 8.80164 11.6801C8.53267 11.3428 8.55382 10.85 8.85591 10.5449C10.0696 9.32078 11.2829 8.09851 12.4958 6.87812Z" fill="currentColor"/></svg></button>
    </div>
  </div>
</recently-viewed-slider>

<script>
  if (!customElements.get('recently-viewed-slider')) {
    class RecentlyViewedSlider extends HTMLElement {
      constructor() {
        super();
        this.container = this.querySelector('.recently-viewed');
        this.grid = this.querySelector('.js-slider');
        this.maxProducts = parseInt(this.dataset.maxProducts, 10);
        this.searchUrl = this.dataset.searchUrl;
        this.showVariants = this.dataset.showVariants === 'true';
        this.storageKey = 'viewedProducts';
      }

      connectedCallback() {
        if (!this.searchUrl) {
          console.error('[Recently Viewed] Search URL is missing.');
          this.style.display = 'none';
          return;
        }
        this.fetchRecentlyViewedProducts();
      }

      fetchRecentlyViewedProducts() {
        const productIdsString = localStorage.getItem(this.storageKey);
        if (!productIdsString) { this.style.display = 'none'; return; }
        let productIds = [];
        try { productIds = JSON.parse(productIdsString); } catch (e) { this.style.display = 'none'; return; }
        if (!Array.isArray(productIds) || productIds.length === 0) { this.style.display = 'none'; return; }
        const queryIds = productIds.slice(0, this.maxProducts);
        const searchQuery = queryIds.map(id => `id:${id}`).join(' OR ');
        const url = `${this.searchUrl}?type=product&q=${searchQuery}`;
        fetch(url)
          .then(response => response.text())
          .then(html => {
            const tempDoc = new DOMParser().parseFromString(html, 'text/html');
            const productNodes = tempDoc.querySelectorAll('.product-card');

            if (productNodes && productNodes.length > 0) {
              this.renderProducts(Array.from(productNodes), queryIds);
            } else {
              this.style.display = 'none';
            }
          })
          .catch(error => { console.error('[Recently Viewed] Fetch Error:', error); this.style.display = 'none'; });
      }

      renderProducts(productNodes, originalOrder) {
        const orderedProductNodes = [];
        originalOrder.forEach(id => {
          const found = productNodes.find(node => node.querySelector(`[data-product-id="${id}"]`) || node.dataset.productId === id);
          if (found) {
            orderedProductNodes.push(found);
          }
        });

        this.grid.innerHTML = '';
        const productsToRender = orderedProductNodes.length > 0 ? orderedProductNodes : productNodes;

        productsToRender.forEach(node => {
          const listItem = document.createElement('li');
          listItem.appendChild(node.cloneNode(true));
          this.grid.appendChild(listItem);
        });
        
        const displayStyle = this.showVariants ? 'flex' : 'none';
        this.grid.querySelectorAll('.product-card__swatches').forEach(swatches => {
          swatches.style.display = displayStyle;
        });

        this.container.style.display = 'block';
        this.initSlider();
      }

      initSlider() {
        if (this.dataset.initialized) return;
        this.slider = this.querySelector('.js-slider');
        if (!this.slider || this.slider.children.length === 0) return;
        const firstProduct = this.slider.querySelector('li');
        if (firstProduct) {
          const sliderStyles = window.getComputedStyle(this.slider);
          const productGap = parseFloat(sliderStyles.gap) || 0;
          this.scrollDistance = firstProduct.offsetWidth + productGap;
        }
        this.prevButton = this.querySelector('.js-slider-prev');
        this.nextButton = this.querySelector('.js-slider-next');
        this.prevButton.addEventListener('click', () => this.slider.scrollBy({ left: -this.scrollDistance, behavior: 'smooth' }));
        this.nextButton.addEventListener('click', () => this.slider.scrollBy({ left: this.scrollDistance, behavior: 'smooth' }));
        this.slider.addEventListener('scroll', this.updateButtonVisibility.bind(this));
        new ResizeObserver(() => this.updateButtonVisibility()).observe(this.slider);
        requestAnimationFrame(() => this.updateButtonVisibility());
        this.dataset.initialized = 'true';
      }

      updateButtonVisibility() {
        if (!this.slider || !this.slider.clientWidth) return;
        const maxScroll = this.slider.scrollWidth - this.slider.clientWidth;
        this.prevButton.classList.toggle('is-hidden', this.slider.scrollLeft <= 0);
        this.nextButton.classList.toggle('is-hidden', this.slider.scrollLeft >= maxScroll - 1);
      }
    }
    customElements.define('recently-viewed-slider', RecentlyViewedSlider);
  }
</script>

{% schema %}
  {
    "name": "Recently Viewed Products",
    "tag": "section",
    "class": "section--full-width",
    "settings": [
      {
        "type": "header",
        "content": "Section Source Information"
      },
      {
        "type": "paragraph",
        "content": "This section displays products from the 'viewedProducts' key in the customer's browser local storage."
      },
      { "type": "text", "id": "section_title", "label": "Section Title", "default": "Recently Viewed" },
      { "type": "range", "id": "max_products", "min": 4, "max": 12, "step": 1, "label": "Maximum products to show", "default": 8 },
      { "type": "text", "id": "link_text", "label": "Link text" },
      { "type": "url", "id": "link_url", "label": "Link URL" },
      { "type": "range", "id": "page_padding", "label": "Page Padding (Desktop)", "min": 0, "max": 100, "step": 1, "unit": "px", "default": 80 },
      { "type": "range", "id": "page_padding_top", "label": "Page Padding Top", "min": 0, "max": 100, "step": 1, "unit": "px", "default": 50 },
      { "type": "range", "id": "page_padding_bottom", "label": "Page Padding Bottom", "min": 0, "max": 100, "step": 1, "unit": "px", "default": 50 },
      { "type": "color", "id": "background_color", "label": "Background Color", "default": "#FFFFFF" },
      { "type": "header", "content": "Layout Settings" },
      {
        "type": "checkbox",
        "id": "show_variant_picker",
        "label": "Show / Hide Variant Picker",
        "default": true
      },
      { "type": "radio", "id": "products_per_row_mobile", "label": "Products per row (mobile)", "options": [ { "value": "1", "label": "One" }, { "value": "2", "label": "Two" } ], "default": "2" }
    ],
    "presets": [ { "name": "Recently Viewed Products" } ]
  }
{% endschema %}