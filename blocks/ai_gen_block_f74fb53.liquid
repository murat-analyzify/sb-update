{% doc %}
  @prompt
    A block that shows the most recently viewed product as a product card

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .recently-viewed-product-{{ ai_gen_id }} {
    display: block;
    padding: {{ block.settings.padding }}px;
    background-color: {{ block.settings.background_color }};
    border-radius: {{ block.settings.border_radius }}px;
  }

  .recently-viewed-product__title-{{ ai_gen_id }} {
    font-size: {{ block.settings.title_size }}px;
    margin-bottom: 15px;
    color: {{ block.settings.text_color }};
    text-align: {{ block.settings.text_alignment }};
  }

  .recently-viewed-product__card-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    height: 100%;
    border: 1px solid {{ block.settings.card_border_color }};
    border-radius: {{ block.settings.card_border_radius }}px;
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .recently-viewed-product__card-{{ ai_gen_id }}:hover {
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  }

  .recently-viewed-product__image-wrapper-{{ ai_gen_id }} {
    position: relative;
    padding-bottom: 100%;
    overflow: hidden;
    background-color: {{ block.settings.image_background_color }};
  }

  .recently-viewed-product__image-{{ ai_gen_id }} {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .recently-viewed-product__placeholder-{{ ai_gen_id }} {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .recently-viewed-product__placeholder-{{ ai_gen_id }} svg {
    width: 80%;
    height: 80%;
  }

  .recently-viewed-product__info-{{ ai_gen_id }} {
    padding: 15px;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    background-color: {{ block.settings.card_background_color }};
  }

  .recently-viewed-product__product-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.product_title_size }}px;
    margin-bottom: 5px;
    color: {{ block.settings.text_color }};
    font-weight: 500;
  }

  .recently-viewed-product__price-{{ ai_gen_id }} {
    font-size: {{ block.settings.price_size }}px;
    margin-bottom: 15px;
    color: {{ block.settings.price_color }};
  }

  .recently-viewed-product__vendor-{{ ai_gen_id }} {
    font-size: 14px;
    margin-bottom: 10px;
    color: {{ block.settings.vendor_color }};
  }

  .recently-viewed-product__button-{{ ai_gen_id }} {
    display: inline-block;
    padding: 8px 16px;
    background-color: {{ block.settings.button_color }};
    color: {{ block.settings.button_text_color }};
    text-decoration: none;
    border-radius: {{ block.settings.button_border_radius }}px;
    text-align: center;
    transition: background-color 0.3s ease;
    margin-top: auto;
  }

  .recently-viewed-product__button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.button_hover_color }};
  }

  .recently-viewed-product__empty-{{ ai_gen_id }} {
    padding: 30px;
    text-align: center;
    color: {{ block.settings.text_color }};
    background-color: {{ block.settings.card_background_color }};
    border: 1px solid {{ block.settings.card_border_color }};
    border-radius: {{ block.settings.card_border_radius }}px;
  }
{% endstyle %}

<recently-viewed-product-{{ ai_gen_id }} 
  class="recently-viewed-product-{{ ai_gen_id }}"
  data-current-product="{{ product.id }}"
  {{ block.shopify_attributes }}
>
  {% if block.settings.title != blank %}
    <h2 class="recently-viewed-product__title-{{ ai_gen_id }}">{{ block.settings.title }}</h2>
  {% endif %}

  <div class="recently-viewed-product__container-{{ ai_gen_id }}">
    <div class="recently-viewed-product__empty-{{ ai_gen_id }}" style="display: none;">
      {{ block.settings.empty_text }}
    </div>

    <div class="recently-viewed-product__card-{{ ai_gen_id }}" style="display: none;">
      <a href="#" class="recently-viewed-product__link-{{ ai_gen_id }}">
        <div class="recently-viewed-product__image-wrapper-{{ ai_gen_id }}">
          <img class="recently-viewed-product__image-{{ ai_gen_id }}" src="" alt="" loading="lazy">
          <div class="recently-viewed-product__placeholder-{{ ai_gen_id }}">
            {{ 'product-apparel-1' | placeholder_svg_tag }}
          </div>
        </div>
      </a>
      <div class="recently-viewed-product__info-{{ ai_gen_id }}">
        {% if block.settings.show_vendor %}
          <div class="recently-viewed-product__vendor-{{ ai_gen_id }}"></div>
        {% endif %}
        <h3 class="recently-viewed-product__product-title-{{ ai_gen_id }}"></h3>
        <div class="recently-viewed-product__price-{{ ai_gen_id }}"></div>
        <a href="#" class="recently-viewed-product__button-{{ ai_gen_id }}">{{ block.settings.button_text }}</a>
      </div>
    </div>
  </div>
</recently-viewed-product-{{ ai_gen_id }}>

<script>
  (function() {
    class RecentlyViewedProduct extends HTMLElement {
      constructor() {
        super();
        this.currentProductId = this.getAttribute('data-current-product');
        this.productCard = this.querySelector('.recently-viewed-product__card-{{ ai_gen_id }}');
        this.emptyMessage = this.querySelector('.recently-viewed-product__empty-{{ ai_gen_id }}');
        this.productLink = this.querySelector('.recently-viewed-product__link-{{ ai_gen_id }}');
        this.productImage = this.querySelector('.recently-viewed-product__image-{{ ai_gen_id }}');
        this.productPlaceholder = this.querySelector('.recently-viewed-product__placeholder-{{ ai_gen_id }}');
        this.productTitle = this.querySelector('.recently-viewed-product__product-title-{{ ai_gen_id }}');
        this.productPrice = this.querySelector('.recently-viewed-product__price-{{ ai_gen_id }}');
        this.productVendor = this.querySelector('.recently-viewed-product__vendor-{{ ai_gen_id }}');
        this.productButton = this.querySelector('.recently-viewed-product__button-{{ ai_gen_id }}');
        this.maxProducts = {{ block.settings.max_products }};
      }

      connectedCallback() {
        this.initRecentlyViewed();
      }

      initRecentlyViewed() {
        let recentlyViewed = JSON.parse(localStorage.getItem('recentlyViewed')) || [];
        
        // Add current product to recently viewed if on a product page and not already in the list
        if (this.currentProductId && this.currentProductId !== 'null') {
          // Remove the current product if it's already in the list
          recentlyViewed = recentlyViewed.filter(item => item.id !== this.currentProductId);
        }
        
        // Display the most recently viewed product (if any)
        if (recentlyViewed.length > 0) {
          // Get the most recent product that isn't the current one
          const recentProduct = recentlyViewed[0];
          this.displayProduct(recentProduct);
        } else {
          this.showEmptyMessage();
        }
      }

      displayProduct(product) {
        // Update product card with product data
        this.productLink.href = product.url;
        
        if (product.image) {
          this.productImage.src = product.image;
          this.productImage.alt = product.title;
          this.productImage.style.display = 'block';
          this.productPlaceholder.style.display = 'none';
        } else {
          this.productImage.style.display = 'none';
          this.productPlaceholder.style.display = 'flex';
        }
        
        this.productTitle.textContent = product.title;
        this.productPrice.innerHTML = product.price;
        
        if (this.productVendor && product.vendor) {
          this.productVendor.textContent = product.vendor;
        }
        
        this.productButton.href = product.url;
        
        // Show the product card, hide empty message
        this.productCard.style.display = 'flex';
        this.emptyMessage.style.display = 'none';
      }

      showEmptyMessage() {
        // Show empty message, hide product card
        this.productCard.style.display = 'none';
        this.emptyMessage.style.display = 'block';
      }
    }

    customElements.define('recently-viewed-product-{{ ai_gen_id }}', RecentlyViewedProduct);
  })();
</script>

{% schema %}
{
  "name": "Recently Viewed Product",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Recently Viewed"
    },
    {
      "type": "text",
      "id": "empty_text",
      "label": "Empty state text",
      "default": "No recently viewed products"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button text",
      "default": "View Product"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "label": "Show vendor",
      "default": true
    },
    {
      "type": "range",
      "id": "max_products",
      "min": 1,
      "max": 10,
      "step": 1,
      "label": "Maximum products to remember",
      "default": 5
    },
    {
      "type": "header",
      "content": "Styling"
    },
    {
      "type": "range",
      "id": "padding",
      "min": 0,
      "max": 50,
      "step": 5,
      "unit": "px",
      "label": "Padding",
      "default": 20
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Text alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "left"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Border radius",
      "default": 8
    },
    {
      "type": "header",
      "content": "Product Card"
    },
    {
      "type": "color",
      "id": "card_background_color",
      "label": "Card background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "card_border_color",
      "label": "Card border color",
      "default": "#e6e6e6"
    },
    {
      "type": "range",
      "id": "card_border_radius",
      "min": 0,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Card border radius",
      "default": 8
    },
    {
      "type": "color",
      "id": "image_background_color",
      "label": "Image background color",
      "default": "#f4f4f4"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 12,
      "max": 36,
      "step": 1,
      "unit": "px",
      "label": "Title size",
      "default": 20
    },
    {
      "type": "range",
      "id": "product_title_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Product title size",
      "default": 16
    },
    {
      "type": "range",
      "id": "price_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Price size",
      "default": 16
    },
    {
      "type": "color",
      "id": "price_color",
      "label": "Price color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "vendor_color",
      "label": "Vendor color",
      "default": "#666666"
    },
    {
      "type": "header",
      "content": "Button"
    },
    {
      "type": "color",
      "id": "button_color",
      "label": "Button color",
      "default": "#000f9f"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_hover_color",
      "label": "Button hover color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "button_border_radius",
      "min": 0,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Button border radius",
      "default": 4
    }
  ],
  "presets": [
    {
      "name": "Recently Viewed Product"
    }
  ]
}
{% endschema %}